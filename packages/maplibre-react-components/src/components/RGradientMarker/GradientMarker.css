.maplibregl-gradient-marker {
  --marker-scale: 1;
  --marker-color: var(--color-yellow-3);
  --marker-color-dark: color-mix(in srgb, var(--marker-color), black 40%);
  --marker-color-gradient: linear-gradient(120deg, var(--marker-color), var(--marker-color-dark));

  &[data-shape="pin"] {
    --marker-height: calc(var(--marker-scale) * 50px);
    --marker-width: calc(var(--marker-scale) * 35px);

    /**
     * used to calculate size of text/circle/svg container
     *  -> marker-height when landscape
     *  -> marker-width when portrait
     */
    --marker-size: var(--marker-width);
  }

  &[data-shape="circle"] {
    --marker-height: calc(var(--marker-scale) * 35px);
    --marker-width: calc(var(--marker-scale) * 35px);

    --marker-size: var(--marker-width);
  }
}

.maplibregl-gradient-marker {
  position: absolute;
  display: block;

  top: 0;
  left: 0;

  &[data-interactive] {
    cursor: pointer;
  }

  &,
  & .marker {
    width: var(--marker-width);
    height: var(--marker-height);
  }

  & .marker {
    transition: transform 0.2s ease;
  }

  & .marker::before,
  & .marker::after {
    position: absolute;
    top: 0;
  }

  & .marker::after,
  .inactive {
    font-family: "fontello-mrc", sans-serif;
  }

  /* pin / circle */
  & .marker::after {
    top: 0;
    left: 0;
    width: var(--marker-width);
    height: var(--marker-height);

    font-size: var(--marker-height);

    z-index: 2;

    color: transparent;

    /* legacy browser without background-clip support */
    background-color: var(--marker-color);

    background-image: var(--marker-color-gradient);
    -webkit-background-clip: text;
    background-clip: text;

    background-size: calc(var(--marker-width) * 2) var(--marker-height);

    transition: background-position 0.3s ease;
    background-position: calc(var(--marker-width) * -1) 0;
  }

  &[data-interactive].selected .marker::after,
  &[data-interactive]:hover .marker::after {
    background-position: calc(var(--marker-width) * -0.5) 0;
  }

  /* :active only for storybook */
  &[data-interactive]:active .marker::after,
  /* .active is added when we click/drag on the marker */
  &[data-interactive].active .marker::after {
    background-position: 0px;
  }

  /**
   * get content value from src/style/font/fontello.css file.
   */
  &[data-shape="pin"] .marker::after {
    content: "\e803";
  }
  &[data-shape="circle"] .marker::after {
    content: "\e802";
  }

  & .circle,
  & .inactive,
  & i,
  & svg,
  & .text {
    position: absolute;
    left: calc(var(--marker-size) / 2);
    top: calc(var(--marker-size) / 2);
    transform: translate(-50%, -50%);
  }

  & .circle {
    z-index: 1;
    width: calc(var(--marker-size) * 0.8);
    height: calc(var(--marker-size) * 0.8);
    border-radius: 50%;
    background-color: rgb(var(--color-gray-0));
    transition: background-color 0.3s ease;
  }

  & i {
    z-index: 3;
    width: var(--marker-size);
    height: var(--marker-size);
    display: flex;
    align-items: center;
    justify-content: center;

    &::before {
      font-size: calc(var(--marker-size) * 0.5);
      color: inherit;
    }
  }

  & svg {
    z-index: 3;
    width: calc(var(--marker-size) * 0.5);
    height: calc(var(--marker-size) * 0.5);
  }

  & .text {
    z-index: 3;
    width: calc(var(--marker-size) * 0.7);
    height: calc(var(--marker-size) * 0.7);
    font-weight: 500;
    font-size: min(26px, calc(1rem * var(--marker-scale)));
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &.small-text {
    .text {
      font-size: 10px;
    }
  }

  & .inactive {
    width: calc(var(--marker-size) * 0.7);
    height: calc(var(--marker-size) * 0.7);
    z-index: 4;
    display: flex;
    align-items: center;
    justify-content: center;

    &::before {
      font-size: calc(var(--marker-size) * 0.8);
      content: "\e81f";
      color: rgb(var(--color-red-3));
    }
  }

  &.disabled {
    opacity: 1;
    pointer-events: none;
    user-select: none;

    & > .marker::after {
      /* fe-marker */
      color: rgb(var(--color-gray-2));
    }
  }

  /* shadow */
  &[data-shape="pin"] .marker::before {
    left: 50%;
    transform: translateX(-50%);

    width: var(--marker-height);
    height: var(--marker-height);

    content: "";
    background-image: url("b64---./src/style/assets/marker-shadow-centered.png---");
    background-size: cover;
    pointer-events: none;
  }

  /* dragging feature */
  /* for draggable marker shadow the position of the marker when dragging */
  .target {
    width: calc(var(--marker-size) * 0.2);
    height: calc(var(--marker-size) * 0.1);
    background-color: #b4b4b4;
    position: absolute;
    left: calc(50% - var(--marker-size) * 0.1);
    top: calc(100% - var(--marker-size) * 0.05);
    border-radius: 50%;
    transition: transform 0.3s ease;

    opacity: 0;
    transform: scale(0.5);

    transition:
      transform 0.2s ease,
      opacity 0.2s ease;

    box-shadow: 0px 0px 2px #000;
  }

  &.draggable:active,
  &.draggable.active {
    & > .marker {
      transform: translateY(-5px);
    }

    .target {
      opacity: 0.5;
      transform: scale(1);
    }
  }

  /* geolocation use same element "target" as draggable */
  &.geolocation .target {
    animation: geolocation-dot-pulse 2s infinite;
  }
}

@keyframes geolocation-dot-pulse {
  0% {
    opacity: 1;
    transform: scale(1);
  }

  70% {
    opacity: 0;
    transform: scale(5);
  }

  100% {
    opacity: 0;
    transform: scale(1);
  }
}
